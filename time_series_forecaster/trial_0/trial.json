{"trial_id": "0", "hyperparameters": {"space": [{"class_name": "Boolean", "config": {"name": "timeseries_block_1/rnn_block_1/bidirectional", "default": true, "conditions": []}}, {"class_name": "Choice", "config": {"name": "timeseries_block_1/rnn_block_1/layer_type", "default": "lstm", "conditions": [], "values": ["gru", "lstm"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "timeseries_block_1/rnn_block_1/num_layers", "default": 2, "conditions": [], "values": [1, 2, 3], "ordered": true}}, {"class_name": "Choice", "config": {"name": "regression_head_1/dropout", "default": 0, "conditions": [], "values": [0.0, 0.25, 0.5], "ordered": true}}, {"class_name": "Choice", "config": {"name": "optimizer", "default": "adam", "conditions": [], "values": ["adam", "sgd", "adam_weight_decay"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "learning_rate", "default": 0.001, "conditions": [], "values": [0.1, 0.01, 0.001, 0.0001, 2e-05, 1e-05], "ordered": true}}], "values": {"timeseries_block_1/rnn_block_1/bidirectional": true, "timeseries_block_1/rnn_block_1/layer_type": "lstm", "timeseries_block_1/rnn_block_1/num_layers": 2, "regression_head_1/dropout": 0.25, "optimizer": "adam", "learning_rate": 0.001}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\keras_tuner\\engine\\base_tuner.py\", line 266, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\keras_tuner\\engine\\base_tuner.py\", line 231, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n  File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\keras_tuner\\engine\\tuner.py\", line 287, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n  File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\autokeras\\engine\\tuner.py\", line 101, in _build_and_fit_model\n    _, history = utils.fit_with_adaptive_batch_size(\n  File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\autokeras\\utils\\utils.py\", line 88, in fit_with_adaptive_batch_size\n    history = run_with_adaptive_batch_size(\n  File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\autokeras\\utils\\utils.py\", line 101, in run_with_adaptive_batch_size\n    history = func(x=x, validation_data=validation_data, **fit_kwargs)\n  File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\autokeras\\utils\\utils.py\", line 89, in <lambda>\n    batch_size, lambda **kwargs: model.fit(**kwargs), **fit_kwargs\n  File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\keras\\utils\\traceback_utils.py\", line 70, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\tensorflow\\python\\eager\\execute.py\", line 54, in quick_execute\n    tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Graph execution error:\n\nDetected at node 'gradient_tape/mean_squared_error/BroadcastGradientArgs' defined at (most recent call last):\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\runpy.py\", line 197, in _run_module_as_main\n      return _run_code(code, main_globals, None,\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\runpy.py\", line 87, in _run_code\n      exec(code, run_globals)\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\ipykernel_launcher.py\", line 17, in <module>\n      app.launch_new_instance()\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\traitlets\\config\\application.py\", line 992, in launch_instance\n      app.start()\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\ipykernel\\kernelapp.py\", line 711, in start\n      self.io_loop.start()\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\tornado\\platform\\asyncio.py\", line 215, in start\n      self.asyncio_loop.run_forever()\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\asyncio\\base_events.py\", line 601, in run_forever\n      self._run_once()\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\asyncio\\base_events.py\", line 1905, in _run_once\n      handle._run()\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\asyncio\\events.py\", line 80, in _run\n      self._context.run(self._callback, *self._args)\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\ipykernel\\kernelbase.py\", line 510, in dispatch_queue\n      await self.process_one()\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\ipykernel\\kernelbase.py\", line 499, in process_one\n      await dispatch(*args)\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\ipykernel\\kernelbase.py\", line 406, in dispatch_shell\n      await result\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\ipykernel\\kernelbase.py\", line 729, in execute_request\n      reply_content = await reply_content\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\ipykernel\\ipkernel.py\", line 411, in do_execute\n      res = shell.run_cell(\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\ipykernel\\zmqshell.py\", line 531, in run_cell\n      return super().run_cell(*args, **kwargs)\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 2940, in run_cell\n      result = self._run_cell(\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 2995, in _run_cell\n      return runner(coro)\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\IPython\\core\\async_helpers.py\", line 129, in _pseudo_sync_runner\n      coro.send(None)\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 3194, in run_cell_async\n      has_raised = await self.run_ast_nodes(code_ast.body, cell_name,\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 3373, in run_ast_nodes\n      if await self.run_code(code, result, async_=asy):\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 3433, in run_code\n      exec(code_obj, self.user_global_ns, self.user_ns)\n    File \"C:\\Users\\pongthsa\\AppData\\Local\\Temp\\ipykernel_16712\\1803661904.py\", line 1, in <module>\n      clf.fit(\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\autokeras\\tasks\\time_series_forecaster.py\", line 268, in fit\n      super().fit(\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\autokeras\\tasks\\time_series_forecaster.py\", line 88, in fit\n      history = super().fit(\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\autokeras\\tasks\\structured_data.py\", line 139, in fit\n      history = super().fit(\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\autokeras\\auto_model.py\", line 292, in fit\n      history = self.tuner.search(\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\autokeras\\engine\\tuner.py\", line 193, in search\n      super().search(\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\keras_tuner\\engine\\base_tuner.py\", line 226, in search\n      self._try_run_and_update_trial(trial, *fit_args, **fit_kwargs)\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\keras_tuner\\engine\\base_tuner.py\", line 266, in _try_run_and_update_trial\n      self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\keras_tuner\\engine\\base_tuner.py\", line 231, in _run_and_update_trial\n      results = self.run_trial(trial, *fit_args, **fit_kwargs)\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\keras_tuner\\engine\\tuner.py\", line 287, in run_trial\n      obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\autokeras\\engine\\tuner.py\", line 101, in _build_and_fit_model\n      _, history = utils.fit_with_adaptive_batch_size(\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\autokeras\\utils\\utils.py\", line 88, in fit_with_adaptive_batch_size\n      history = run_with_adaptive_batch_size(\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\autokeras\\utils\\utils.py\", line 101, in run_with_adaptive_batch_size\n      history = func(x=x, validation_data=validation_data, **fit_kwargs)\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\autokeras\\utils\\utils.py\", line 89, in <lambda>\n      batch_size, lambda **kwargs: model.fit(**kwargs), **fit_kwargs\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\keras\\utils\\traceback_utils.py\", line 65, in error_handler\n      return fn(*args, **kwargs)\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\keras\\engine\\training.py\", line 1564, in fit\n      tmp_logs = self.train_function(iterator)\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\keras\\engine\\training.py\", line 1160, in train_function\n      return step_function(self, iterator)\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\keras\\engine\\training.py\", line 1146, in step_function\n      outputs = model.distribute_strategy.run(run_step, args=(data,))\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\keras\\engine\\training.py\", line 1135, in run_step\n      outputs = model.train_step(data)\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\keras\\engine\\training.py\", line 997, in train_step\n      self.optimizer.minimize(loss, self.trainable_variables, tape=tape)\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\keras\\optimizers\\optimizer_v2\\optimizer_v2.py\", line 576, in minimize\n      grads_and_vars = self._compute_gradients(\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\keras\\optimizers\\optimizer_v2\\optimizer_v2.py\", line 634, in _compute_gradients\n      grads_and_vars = self._get_gradients(\n    File \"D:\\ProgramData\\Anaconda3\\envs\\dev_ml_local\\lib\\site-packages\\keras\\optimizers\\optimizer_v2\\optimizer_v2.py\", line 510, in _get_gradients\n      grads = tape.gradient(loss, var_list, grad_loss)\nNode: 'gradient_tape/mean_squared_error/BroadcastGradientArgs'\nIncompatible shapes: [8,1] vs. [16,1]\n\t [[{{node gradient_tape/mean_squared_error/BroadcastGradientArgs}}]] [Op:__inference_train_function_13080]\n"}