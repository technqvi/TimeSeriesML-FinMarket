prediction_col='SIGNAL'
feature_cols=['SIGNAL']

# prediction_col='MACD'
# feature_cols=['MACD']

# feature_cols=['Price','EMA1','SIGNAL','RSI']

main_obj_metric='mean_absolute_error'
main_loss='mean_absolute_error'
option_obj_metric='rmse'  # same name as funtion
def rmse(y_true, y_pred):
 return backend.sqrt(backend.mean(backend.square(y_pred - y_true), axis=-1))

split_way=2

input_sequence_length =60 #60 #120
output_sequence_length =10  # 10 #20
train_ratio=0.8

n_epochs =150  #100/150/200
n_batch_size = 32  # 32/48/64
n_early=18

seed=88

#Tuning
mx_step=4
mxMultipleStep=1
nExecutions_per_trial=3 #averger re-run on 1 trail 

min_drop=0.0
max_drop=0.2
step_drop=0.1

ratio_traial_max=1#0.7/0.8

Best mean_absolute_error So Far: 0.019652222593625385

Train Row : 1606 to predict future 10
Total NN : 60= 60(backward step) x 1 (features) with step up 60 until 240
[60, 120, 180, 240] and [0.  0.1 0.2]
all combination : 4 x 3 = 12
MAx run : 12 each trail run to essemble  3

{'input_unit': 240, 'Dropout_rate': 0.0}

test loss, test acc: [0.053886789828538895, 0.053886789828538895, 0.06286666542291641]

oot MEAN Square Error(RMSE): 1.55
Mean Absolute Error (MAE): 1.1
Mean Absolute Percentage Error (MAPE): inf %
Median Absolute Percentage Error (MDAPE): 31.79 %

Best epoch: 104